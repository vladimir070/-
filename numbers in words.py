import math

def float_to_text(number):
    """Преобразует число с плавающей точкой в текстовое представление на русском языке."""

    целая_часть, дробная_часть_str = str(number).split('.') if '.' in str(number) else (str(number), '0')

    целая_часть = int(целая_часть)
    дробная_часть = int(дробная_часть_str) if дробная_часть_str else 0
    количество_знаков = len(дробная_часть_str)

    целая_часть_текст = number_to_text(целая_часть, is_целая=True)

    if дробная_часть == 0:
        return целая_часть_текст  # Убираем " целых", если дробная часть равна нулю

    дробная_часть_текст = number_to_text_fractional(дробная_часть, количество_знаков) # Используем новую функцию

    # Определяем склонение слова "целый"
    if целая_часть == 1:
        целая_строка = "целая"
    elif 2 <= целая_часть <= 4:
        целая_строка = "целых"  # Форма для 2, 3, 4
    else:
        целая_строка = "целых"

    разряды = {
        1: ["десятая", "десятых", "десятых"],
        2: ["сотая", "сотых", "сотых"],
        3: ["тысячная", "тысячных", "тысячных"],
        4: ["десятитысячная", "десятитысячных", "десятитысячных"],
        5: ["стотысячная", "стотысячных", "стотысячных"],
        6: ["миллионная", "миллионных", "миллионных"],
        7: ["десятимиллионная", "десятимиллионных", "десятимиллионных"],
        8: ["стомиллионная", "стомиллионных", "стомиллионных"],
        9: ["миллиардная", "миллиардных", "миллиардных"],
        10: ["десятимиллиардная", "десятимиллиардных", "десятимиллиардных"],
        11: ["стомиллиардная", "стомиллиардных", "стомиллиардных"],
        12: ["триллионная", "триллионных", "триллионных"],
        13: ["десятитриллионная", "десятитриллионных", "десятитриллионных"],
        14: ["стотриллионная", "стотриллионных", "стотриллионных"]  # добавим еще разряды
    }

    if количество_знаков not in разряды:
        return "Поддерживается до 14 знаков после запятой" # Или более сложная логика

    склонение = _склонение(дробная_часть, разряды[количество_знаков])


    return целая_часть_текст + " " + целая_строка + " и " + дробная_часть_текст + " " + склонение

def number_to_text_fractional(n, количество_знаков):
    """
    Преобразует дробную часть числа в текстовое представление.
    """
    единицы_ж = ["", "одна", "две", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"] # Женский род для "одна" и "две"
    десятки = ["", "", "двадцать", "тридцать", "сорок", "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяносто"]
    сотни = ["", "сто", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот"]
    двести_до_двадцати = ["", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать"]

    if n == 0: return "ноль"  #  Хотя это маловероятно здесь, лучше обработать

    def _convert_группа_трех_цифр_fractional(num):
      """Преобразует группу из трех цифр в текст (для дробной части, с учетом рода)."""
      if num == 0: return ""

      s = ""
      if num >= 100:
        s += сотни[num // 100] + " "
        num %= 100

      if 10 < num < 20:
        s += двести_до_двадцати[num - 10] + " "
        return s

      if num >= 20:
        s += десятки[num // 10] + " "
        num %= 10

      if num > 0:
         s += единицы_ж[num]  # Всегда используем женский род для дробной части
      return s.strip()

    result = []
    num = n # просто для понятности
    result.append(_convert_группа_трех_цифр_fractional(num))

    return " ".join(filter(None, result)).strip()



def _склонение(количество, варианты):
    """Возвращает правильное склонение для разрядов."""
    if 11 <= количество % 100 <= 19:
        return варианты[2]
    elif количество % 10 == 1:
        return варианты[0]
    elif 2 <= количество % 10 <= 4:
        return варианты[1]
    else:
        return варианты[2]

def number_to_text(n, is_целая=False):
    единицы = ["", "один", "два", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"]
    единицы_жен = ["", "одна", "две", "три", "четыре", "пять", "шесть", "семь", "восемь", "девять"]
    десятки = ["", "", "двадцать", "тридцать", "сорок", "пятьдесят", "шестьдесят", "семьдесят", "восемьдесят", "девяносто"]
    сотни = ["", "сто", "двести", "триста", "четыреста", "пятьсот", "шестьсот", "семьсот", "восемьсот", "девятьсот"]
    двести_до_двадцати = ["", "одиннадцать", "двенадцать", "тринадцать", "четырнадцать", "пятнадцать", "шестнадцать", "семнадцать", "восемнадцать", "девятнадцать"]
    тысячи_варианты = ["тысяча", "тысячи", "тысяч"]
    миллионы_варианты = ["миллион", "миллиона", "миллионов"]

    if n == 0: return "ноль"
    if n < 0: return "минус " + number_to_text(abs(n))

    def _convert_группа_трех_цифр(num):
      """Преобразует группу из трех цифр в текст."""
      if num == 0: return ""

      s = ""
      if num >= 100:
        s += сотни[num // 100] + " "
        num %= 100

      if 10 < num < 20:
        s += двести_до_двадцати[num - 10] + " "
        return s

      if num >= 20:
        s += десятки[num // 10] + " "
        num %= 10

      if num > 0:
          if is_целая and num in [1, 2]:  # Используем женский род для целой части, если нужно
              s += единицы_жен[num]
          else:
              s += единицы[num]

      return s.strip()

    result = []

    if n >= 1000000000:
      return "Слишком большое число.  Поддерживаются числа до миллиарда."

    if n >= 1000000:
        миллионы = n // 1000000
        n %= 1000000
        result.append(_convert_группа_трех_цифр(миллионы) + " " + _склонение(миллионы, миллионы_варианты))

    if n >= 1000:
        тысячи = n // 1000
        n %= 1000
        result.append(_convert_группа_трех_цифр(тысячи) + " " + _склонение(тысячи, тысячи_варианты))


    result.append(_convert_группа_трех_цифр(n))

    return " ".join(filter(None, result)).strip()


try:
    ввод = input("Введите число: ")

    # Проверяем, что ввод состоит только из цифр, точки и запятой
    if all(c in "0123456789.," for c in ввод):
        ввод = ввод.replace(',', '.')  # Заменяем запятую на точку
        num = float(ввод)
        text = float_to_text(num)
        print(text)
    else:
        print("Ошибка: Ввод должен содержать только цифры, точку или запятую.")

except ValueError as e:
     print(f"Ошибка: Некорректный ввод: {e}")
except Exception as e:
    print(f"Произошла ошибка: {e}")
